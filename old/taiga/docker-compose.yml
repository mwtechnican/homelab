version: "3.9"
##################################################################
networks:
  taiganet:
    name: "taiganet"

##################################################################
# taiga
x-environment: &default-back-environment # Database settings
  POSTGRES_DB: ${TAIGA_DB_NAME}
  POSTGRES_USER: ${TAIGA_DB_USER}
  POSTGRES_PASSWORD: ${TAIGA_DB_PASS}
  POSTGRES_HOST: ${TAIGA_DB_HOST}
  # Taiga settings
  TAIGA_SECRET_KEY: ${TAIGA_SECRET_KEY}
  TAIGA_SITES_SCHEME: ${TAIGA_SITES_SCHEME}
  TAIGA_SITES_DOMAIN: ${TAIGA_SITES_DOMAIN}
  TAIGA_SUBPATH: ${TAIGA_SUBPATH} # "" or "/subpath"
  # Email settings. Uncomment following lines and configure your SMTP server
  EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  DEFAULT_FROM_EMAIL: ${TAIGA_DEFAULT_FROM_EMAIL}
  EMAIL_USE_TLS: ${TAIGA_EMAIL_USE_TLS}
  # EMAIL_USE_SSL: "False"
  EMAIL_HOST: ${TAIGA_EMAIL_HOST}
  EMAIL_PORT: ${TAIGA_EMAIL_PORT}
  EMAIL_HOST_USER: ${TAIGA_EMAIL_HOST_USER}
  EMAIL_HOST_PASSWORD: ${TAIGA_EMAIL_HOST_PASSWORD}
  # Rabbitmq settings
  # Should be the same as in taiga-async-rabbitmq and taiga-events-rabbitmq
  RABBITMQ_USER: ${TAIGA_RABBITMQ_USER}
  RABBITMQ_PASS: ${TAIGA_RABBITMQ_PASS}
  # Telemetry settings
  ENABLE_TELEMETRY: "True"
  SESSION_COOKIE_SECURE: "False"
  CSRF_COOKIE_SECURE: "False"
x-volumes: &default-back-volumes
  - ./data/taiga/back/static:/taiga-back/static
  - ./data/taiga/back/media:/taiga-back/media
  # - ./config.py:/taiga-back/settings/config.py
##################################################################
services:
  taiga-gateway:
    image: nginx:1.19-alpine
    container_name: taiga-gateway
    hostname: taiga-gateway
    restart: unless-stopped
    # ports:
    #   - "9000:80"
    volumes:
      - ./data/taiga/gw/taiga.conf:/etc/nginx/conf.d/default.conf
      - ./data/taiga/back/static:/taiga/static
      - ./data/taiga/back/media:/taiga/media
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.taiga.rule=Host(`planner.${domain}`)"
      - "traefik.http.routers.taiga.entryPoints=web"
      - "traefik.http.routers.taiga.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.taiga_tls.rule=Host(`planner.${domain}`)"
      - "traefik.http.routers.taiga_tls.entryPoints=websecure"
    networks:
      dockernet:
        ipv4_address: 172.18.0.9
      taiganet:
  taiga-db:
    image: postgres:12.3
    container_name: taiga-db
    hostname: taiga-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${TAIGA_DB_NAME}
      POSTGRES_USER: ${TAIGA_DB_USER}
      POSTGRES_PASSWORD: ${TAIGA_DB_PASS}
    volumes:
      - ./data/taiga/db:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-back:
    image: taigaio/taiga-back:latest
    container_name: taiga-back
    hostname: taiga-back
    restart: unless-stopped
    environment: *default-back-environment
    volumes: *default-back-volumes
    depends_on:
      - taiga-db
      - taiga-events-rabbitmq
      - taiga-async-rabbitmq
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-async:
    image: taigaio/taiga-back:latest
    container_name: taiga-async
    hostname: taiga-async
    restart: unless-stopped
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment: *default-back-environment
    volumes: *default-back-volumes
    depends_on:
      - taiga-db
      - taiga-back
      - taiga-async-rabbitmq
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: taiga-async-rabbitmq
    hostname: taiga-async-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: ${TAIGA_RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${TAIGA_RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${TAIGA_RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${TAIGA_RABBITMQ_VHOST}
    volumes:
      - ./data/taiga/mq/async:/var/lib/rabbitmq
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-front:
    image: taigaio/taiga-front:latest
    container_name: taiga-front
    hostname: taiga-front
    restart: unless-stopped
    environment:
      TAIGA_URL: ${TAIGA_SITES_SCHEME}://${TAIGA_SITES_DOMAIN}
      TAIGA_WEBSOCKETS_URL: wss://${TAIGA_SITES_DOMAIN}
      TAIGA_SUBPATH: ${TAIGA_SUBPATH} # "" or "/subpath"
    labels:
      - "traefik.enable=false"
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json
    networks:
      taiganet:
  taiga-events:
    image: taigaio/taiga-events:latest
    container_name: taiga-events
    hostname: taiga-events
    restart: unless-stopped
    environment:
      RABBITMQ_USER: ${TAIGA_RABBITMQ_USER}
      RABBITMQ_PASS: ${TAIGA_RABBITMQ_PASS}
      TAIGA_SECRET_KEY: ${TAIGA_SECRET_KEY}
    depends_on:
      - taiga-events-rabbitmq
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: taiga-events-rabbitmq
    hostname: taiga-events-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: ${TAIGA_RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${TAIGA_RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${TAIGA_RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${TAIGA_RABBITMQ_VHOST}
    volumes:
      - ./data/taiga/mq/events:/var/lib/rabbitmq
    labels:
      - "traefik.enable=false"
    networks:
      taiganet:
  taiga-protected:
    image: taigaio/taiga-protected:latest
    container_name: taiga-protected
    hostname: taiga-protected
    restart: unless-stopped
    environment:
      MAX_AGE: 360
      SECRET_KEY: ${TAIGA_SECRET_KEY}
    labels:
      - "traefik.enable=false"
    networks:
      taiganet: